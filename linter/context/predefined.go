// Code generated by __generator__/linter.go; DO NOT EDIT.

package context

import (
	"github.com/pkg/errors"
	"github.com/ysugimoto/falco/types"
)

var (
	ErrDeprecated              = errors.New("deprecated")
	ErrUncapturedRegexVariable = errors.New("uncaptured-regex-variable")
	ErrRegexVariableOverridden = errors.New("overridden-regex-variable")
)

func predefinedVariables() Variables {
	return Variables{
		"LF": &Object{
			Items: map[string]*Object{},
			Value: &Accessor{
				Get:       types.StringType,
				Set:       types.NeverType,
				Unset:     false,
				Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
				Reference: "https://developer.fastly.com/reference/vcl/types/string/",
			},
		},
		"backend": &Object{
			Items: map[string]*Object{
				"%any%": {
					Items: map[string]*Object{
						"connections_open": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://www.fastly.com/documentation/reference/vcl/variables/backend-connection/backend-connections-open/",
							},
						},
						"connections_used": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://www.fastly.com/documentation/reference/vcl/variables/backend-connection/backend-connections-used/",
							},
						},
						"healthy": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-healthy/",
							},
						},
					},
				},
				"conn": {
					Items: map[string]*Object{
						"is_tls": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-conn-is-tls/",
							},
						},
						"tls_protocol": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-conn-tls-protocol/",
							},
						},
					},
				},
				"socket": {
					Items: map[string]*Object{
						"congestion_algorithm": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-congestion-algorithm/",
							},
						},
						"cwnd": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-cwnd/",
							},
						},
						"tcpi_advmss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-advmss/",
							},
						},
						"tcpi_bytes_acked": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-bytes-acked/",
							},
						},
						"tcpi_bytes_received": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-bytes-received/",
							},
						},
						"tcpi_data_segs_in": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-data-segs-in/",
							},
						},
						"tcpi_data_segs_out": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-data-segs-out/",
							},
						},
						"tcpi_delivery_rate": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-delivery-rate/",
							},
						},
						"tcpi_delta_retrans": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-delta-retrans/",
							},
						},
						"tcpi_last_data_sent": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-last-data-sent/",
							},
						},
						"tcpi_max_pacing_rate": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-max-pacing-rate/",
							},
						},
						"tcpi_min_rtt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-min-rtt/",
							},
						},
						"tcpi_notsent_bytes": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-notsent-bytes/",
							},
						},
						"tcpi_pacing_rate": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-pacing-rate/",
							},
						},
						"tcpi_pmtu": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-pmtu/",
							},
						},
						"tcpi_rcv_mss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-rcv-mss/",
							},
						},
						"tcpi_rcv_rtt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-rcv-rtt/",
							},
						},
						"tcpi_rcv_space": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-rcv-space/",
							},
						},
						"tcpi_rcv_ssthresh": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-rcv-ssthresh/",
							},
						},
						"tcpi_reordering": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-reordering/",
							},
						},
						"tcpi_rtt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-rtt/",
							},
						},
						"tcpi_rttvar": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-rttvar/",
							},
						},
						"tcpi_segs_in": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-segs-in/",
							},
						},
						"tcpi_segs_out": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-segs-out/",
							},
						},
						"tcpi_snd_cwnd": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-snd-cwnd/",
							},
						},
						"tcpi_snd_mss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-snd-mss/",
							},
						},
						"tcpi_snd_ssthresh": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-snd-ssthresh/",
							},
						},
						"tcpi_total_retrans": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/backend-socket-tcpi-total-retrans/",
							},
						},
					},
				},
			},
		},
		"bereq": &Object{
			Items: map[string]*Object{
				"between_bytes_timeout": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    PASS | MISS,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/bereq-between-bytes-timeout/",
					},
				},
				"body_bytes_written": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    FETCH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-body-bytes-written/",
					},
				},
				"bytes_written": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    FETCH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-bytes-written/",
					},
				},
				"connect_timeout": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    PASS | MISS,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/bereq-connect-timeout/",
					},
				},
				"first_byte_timeout": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    PASS | MISS,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/bereq-first-byte-timeout/",
					},
				},
				"header_bytes_written": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    FETCH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-header-bytes-written/",
					},
				},
				"http": {
					Items: map[string]*Object{
						"%any%": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     true,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-http/",
							},
						},
					},
				},
				"is_clustering": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-is-clustering/",
					},
				},
				"max_reuse_idle_time": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    MISS | PASS,
						Reference: "",
					},
				},
				"method": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    PASS | MISS | FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-method/",
					},
				},
				"proto": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    PASS | MISS | FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-proto/",
					},
				},
				"request": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    PASS | MISS | FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-request/",
					},
				},
				"url": {
					Items: map[string]*Object{
						"basename": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-url-basename/",
							},
						},
						"dirname": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-url-dirname/",
							},
						},
						"ext": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-url-ext/",
							},
						},
						"path": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-url-path/",
							},
						},
						"qs": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-url-qs/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    PASS | MISS | FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-request/bereq-url/",
					},
				},
			},
		},
		"beresp": &Object{
			Items: map[string]*Object{
				"backend": {
					Items: map[string]*Object{
						"alternate_ips": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-backend-alternate-ips/",
							},
						},
						"ip": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IPType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-backend-ip/",
							},
						},
						"name": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-backend-name/",
							},
						},
						"port": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-backend-port/",
							},
						},
						"requests": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-backend-requests/",
							},
						},
						"src_ip": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IPType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-backend-src-ip/",
							},
						},
						"src_port": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://www.fastly.com/documentation/reference/vcl/variables/backend-connection/beresp-backend-src-port/",
							},
						},
					},
				},
				"brotli": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-brotli/",
					},
				},
				"cacheable": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-cacheable/",
					},
				},
				"do_esi": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/esi/beresp-do-esi/",
					},
				},
				"do_stream": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-do-stream/",
					},
				},
				"grace": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-grace/",
					},
				},
				"gzip": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-gzip/",
					},
				},
				"handshake_time_to_origin_ms": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-handshake-time-to-origin-ms/",
					},
				},
				"hipaa": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-hipaa/",
					},
				},
				"http": {
					Items: map[string]*Object{
						"%any%": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     true,
								Scopes:    FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-http/",
							},
						},
					},
				},
				"pci": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-pci/",
					},
				},
				"proto": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-proto/",
					},
				},
				"response": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-response/",
					},
				},
				"saintmode": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.NeverType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-saintmode/",
					},
				},
				"stale_if_error": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-stale-if-error/",
					},
				},
				"stale_while_revalidate": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-stale-while-revalidate/",
					},
				},
				"status": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-status/",
					},
				},
				"ttl": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-response/beresp-ttl/",
					},
				},
				"used_alternate_path_to_origin": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    FETCH,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/beresp-used-alternate-path-to-origin/",
					},
				},
			},
		},
		"client": &Object{
			Items: map[string]*Object{
				"as": {
					Items: map[string]*Object{
						"name": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-as-name/",
							},
						},
						"number": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-as-number/",
							},
						},
					},
				},
				"bot": {
					Items: map[string]*Object{
						"name": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-bot-name/",
							},
						},
					},
				},
				"browser": {
					Items: map[string]*Object{
						"name": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-browser-name/",
							},
						},
						"version": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-browser-version/",
							},
						},
					},
				},
				"class": {
					Items: map[string]*Object{
						"bot": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-bot/",
							},
						},
						"browser": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-browser/",
							},
						},
						"checker": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-checker/",
								Deprecated: true,
							},
						},
						"downloader": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-downloader/",
								Deprecated: true,
							},
						},
						"feedreader": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-feedreader/",
								Deprecated: true,
							},
						},
						"filter": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-filter/",
								Deprecated: true,
							},
						},
						"masquerading": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-masquerading/",
								Deprecated: true,
							},
						},
						"spam": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-class-spam/",
								Deprecated: true,
							},
						},
					},
				},
				"display": {
					Items: map[string]*Object{
						"height": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.IntegerType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-display-height/",
								Deprecated: true,
							},
						},
						"ppi": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.IntegerType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-display-ppi/",
								Deprecated: true,
							},
						},
						"touchscreen": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-display-touchscreen/",
							},
						},
						"width": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.IntegerType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-display-width/",
								Deprecated: true,
							},
						},
					},
				},
				"geo": {
					Items: map[string]*Object{
						"area_code": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-area-code/",
							},
						},
						"city": {
							Items: map[string]*Object{
								"ascii": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-city-ascii/",
									},
								},
								"latin1": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-city-latin1/",
									},
								},
								"utf8": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-city-utf8/",
									},
								},
							},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-city/",
							},
						},
						"conn_speed": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-conn-speed/",
							},
						},
						"conn_type": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-conn-type/",
							},
						},
						"continent_code": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-continent-code/",
							},
						},
						"country_code": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-country-code/",
							},
						},
						"country_code3": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-country-code3/",
							},
						},
						"country_name": {
							Items: map[string]*Object{
								"ascii": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-country-name-ascii/",
									},
								},
								"latin1": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-country-name-latin1/",
									},
								},
								"utf8": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-country-name-utf8/",
									},
								},
							},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-country-name/",
							},
						},
						"gmt_offset": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-gmt-offset/",
							},
						},
						"ip_override": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-ip-override/",
							},
						},
						"latitude": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.FloatType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-latitude/",
							},
						},
						"longitude": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.FloatType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-longitude/",
							},
						},
						"metro_code": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-metro-code/",
							},
						},
						"postal_code": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-postal-code/",
							},
						},
						"proxy_description": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-proxy-description/",
							},
						},
						"proxy_type": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-proxy-type/",
							},
						},
						"region": {
							Items: map[string]*Object{
								"ascii": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-region-ascii/",
									},
								},
								"latin1": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-region-latin1/",
									},
								},
								"utf8": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-region-utf8/",
									},
								},
							},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-region/",
							},
						},
						"utc_offset": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/client-geo-utc-offset/",
							},
						},
					},
				},
				"identified": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-identified/",
					},
				},
				"identity": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-identity/",
					},
				},
				"ip": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-ip/",
					},
				},
				"os": {
					Items: map[string]*Object{
						"name": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-os-name/",
							},
						},
						"version": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-os-version/",
							},
						},
					},
				},
				"platform": {
					Items: map[string]*Object{
						"ereader": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-ereader/",
								Deprecated: true,
							},
						},
						"gameconsole": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-gameconsole/",
							},
						},
						"hwtype": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-hwtype/",
							},
						},
						"mediaplayer": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-mediaplayer/",
							},
						},
						"mobile": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-mobile/",
							},
						},
						"model": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://www.fastly.com/documentation/reference/vcl/variables/client-request/client-platform-model/",
							},
						},
						"smarttv": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-smarttv/",
							},
						},
						"tablet": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-tablet/",
							},
						},
						"tvplayer": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:        types.BoolType,
								Set:        types.NeverType,
								Unset:      false,
								Scopes:     RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference:  "https://developer.fastly.com/reference/vcl/variables/client-request/client-platform-tvplayer/",
								Deprecated: true,
							},
						},
						"vendor": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://www.fastly.com/documentation/reference/vcl/variables/client-request/client-platform-vendor/",
							},
						},
					},
				},
				"port": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-port/",
					},
				},
				"requests": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-requests/",
					},
				},
				"sess_timeout": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://web.archive.org/web/20210306052653/https://developer.fastly.com/reference/vcl/variables/client-connection/client-sess-timeout/",
					},
				},
				"socket": {
					Items: map[string]*Object{
						"congestion_algorithm": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-congestion-algorithm/",
							},
						},
						"cwnd": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.IntegerType,
								Unset:     false,
								Scopes:    RECV | ERROR | FETCH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-cwnd/",
							},
						},
						"nexthop": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IPType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-nexthop/",
							},
						},
						"pace": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.IntegerType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-pace/",
							},
						},
						"ploss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.FloatType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-ploss/",
							},
						},
						"tcp_info": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcp-info/",
							},
						},
						"tcpi_advmss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-advmss/",
							},
						},
						"tcpi_bytes_acked": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-bytes-acked/",
							},
						},
						"tcpi_bytes_received": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-bytes-received/",
							},
						},
						"tcpi_data_segs_in": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-data-segs-in/",
							},
						},
						"tcpi_data_segs_out": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-data-segs-out/",
							},
						},
						"tcpi_delivery_rate": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-delivery-rate/",
							},
						},
						"tcpi_delta_retrans": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-delta-retrans/",
							},
						},
						"tcpi_last_data_sent": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-last-data-sent/",
							},
						},
						"tcpi_max_pacing_rate": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-max-pacing-rate/",
							},
						},
						"tcpi_min_rtt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-min-rtt/",
							},
						},
						"tcpi_notsent_bytes": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-notsent-bytes/",
							},
						},
						"tcpi_pacing_rate": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-pacing-rate/",
							},
						},
						"tcpi_pmtu": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-pmtu/",
							},
						},
						"tcpi_rcv_mss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-rcv-mss/",
							},
						},
						"tcpi_rcv_rtt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-rcv-rtt/",
							},
						},
						"tcpi_rcv_space": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-rcv-space/",
							},
						},
						"tcpi_rcv_ssthresh": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-rcv-ssthresh/",
							},
						},
						"tcpi_reordering": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-reordering/",
							},
						},
						"tcpi_rtt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-rtt/",
							},
						},
						"tcpi_rttvar": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-rttvar/",
							},
						},
						"tcpi_segs_in": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-segs-in/",
							},
						},
						"tcpi_segs_out": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-segs-out/",
							},
						},
						"tcpi_snd_cwnd": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | FETCH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-snd-cwnd/",
							},
						},
						"tcpi_snd_mss": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-snd-mss/",
							},
						},
						"tcpi_snd_ssthresh": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-snd-ssthresh/",
							},
						},
						"tcpi_total_retrans": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/client-socket-tcpi-total-retrans/",
							},
						},
					},
				},
			},
		},
		"director": &Object{
			Items: map[string]*Object{
				"%any%": {
					Items: map[string]*Object{
						"healthy": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://www.fastly.com/documentation/reference/vcl/variables/miscellaneous/director-healthy/",
							},
						},
					},
				},
			},
		},
		"esi": &Object{
			Items: map[string]*Object{
				"allow_inside_cdata": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV | FETCH | ERROR | DELIVER,
						Reference: "https://developer.fastly.com/reference/vcl/variables/esi/esi-allow-inside-cdata/",
					},
				},
			},
		},
		"fastly": &Object{
			Items: map[string]*Object{
				"ddos_detected": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | DELIVER | LOG,
						Reference: "https://www.fastly.com/documentation/reference/vcl/variables/miscellaneous/fastly-ddos-detected/",
					},
				},
				"error": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     true,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/fastly-error/",
					},
				},
				"ff": {
					Items: map[string]*Object{
						"visits_this_pop": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/fastly-ff-visits-this-pop/",
							},
						},
						"visits_this_pop_this_service": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    MISS,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/fastly-ff-visits-this-pop-this-service/",
							},
						},
						"visits_this_service": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/fastly-ff-visits-this-service/",
							},
						},
					},
				},
				"is_staging": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://www.fastly.com/documentation/reference/vcl/variables/miscellaneous/fastly-is-staging/",
					},
				},
			},
		},
		"fastly_info": &Object{
			Items: map[string]*Object{
				"edge": {
					Items: map[string]*Object{
						"is_tls": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/fastly-info-edge-is-tls/",
							},
						},
					},
				},
				"h2": {
					Items: map[string]*Object{
						"fingerprint": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "",
							},
						},
						"is_push": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/fastly-info-h2-is-push/",
							},
						},
						"stream_id": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/fastly-info-h2-stream-id/",
							},
						},
					},
				},
				"host_header": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/fastly-info-host-header/",
					},
				},
				"is_cluster_edge": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER,
						Reference: "https://www.integralist.co.uk/posts/fastly-varnish/",
					},
				},
				"is_cluster_shield": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    MISS | FETCH,
						Reference: "https://www.integralist.co.uk/posts/fastly-varnish/",
					},
				},
				"is_h2": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/fastly-info-is-h2/",
					},
				},
				"is_h3": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/fastly-info-is-h3/",
					},
				},
				"request_id": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | DELIVER | LOG,
						Reference: "",
					},
				},
				"state": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/fastly-info-state/",
					},
				},
			},
		},
		"geoip": &Object{
			Items: map[string]*Object{
				"area_code": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-area-code/",
					},
				},
				"city": {
					Items: map[string]*Object{
						"ascii": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-city-ascii/",
							},
						},
						"latin1": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-city-latin1/",
							},
						},
						"utf8": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-city-utf8/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-city/",
					},
				},
				"continent_code": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-continent-code/",
					},
				},
				"country_code": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-country-code/",
					},
				},
				"country_code3": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-country-code3/",
					},
				},
				"country_name": {
					Items: map[string]*Object{
						"ascii": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-country-name-ascii/",
							},
						},
						"latin1": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-country-name-latin1/",
							},
						},
						"utf8": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-country-name-utf8/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-country-name/",
					},
				},
				"ip_override": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-ip-override/",
					},
				},
				"latitude": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-latitude/",
					},
				},
				"longitude": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-longitude/",
					},
				},
				"metro_code": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-metro-code/",
					},
				},
				"postal_code": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-postal-code/",
					},
				},
				"region": {
					Items: map[string]*Object{
						"ascii": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-region-ascii/",
							},
						},
						"latin1": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-region-latin1/",
							},
						},
						"utf8": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-region-utf8/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-region/",
					},
				},
				"use_x_forwarded_for": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/geolocation/geoip-use-x-forwarded-for/",
					},
				},
			},
		},
		"math": &Object{
			Items: map[string]*Object{
				"1_PI": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-1-pi/",
					},
				},
				"2PI": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-2pi/",
					},
				},
				"2_PI": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-2-pi/",
					},
				},
				"2_SQRTPI": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-2-sqrtpi/",
					},
				},
				"E": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-e/",
					},
				},
				"FLOAT_DIG": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-dig/",
					},
				},
				"FLOAT_EPSILON": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-epsilon/",
					},
				},
				"FLOAT_MANT_DIG": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-mant-dig/",
					},
				},
				"FLOAT_MAX": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-max/",
					},
				},
				"FLOAT_MAX_10_EXP": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-max-10-exp/",
					},
				},
				"FLOAT_MAX_EXP": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-max-exp/",
					},
				},
				"FLOAT_MIN": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-min/",
					},
				},
				"FLOAT_MIN_10_EXP": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-min-10-exp/",
					},
				},
				"FLOAT_MIN_EXP": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-min-exp/",
					},
				},
				"FLOAT_RADIX": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-float-radix/",
					},
				},
				"INTEGER_BIT": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-integer-bit/",
					},
				},
				"INTEGER_MAX": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-integer-max/",
					},
				},
				"INTEGER_MIN": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-integer-min/",
					},
				},
				"LN10": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-ln10/",
					},
				},
				"LN2": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-ln2/",
					},
				},
				"LOG10E": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-log10e/",
					},
				},
				"LOG2E": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-log2e/",
					},
				},
				"NAN": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-nan/",
					},
				},
				"NEG_HUGE_VAL": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-neg-huge-val/",
					},
				},
				"NEG_INFINITY": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-neg-infinity/",
					},
				},
				"PHI": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-phi/",
					},
				},
				"PI": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-pi/",
					},
				},
				"PI_2": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-pi-2/",
					},
				},
				"PI_4": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-pi-4/",
					},
				},
				"POS_HUGE_VAL": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-pos-huge-val/",
					},
				},
				"POS_INFINITY": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-pos-infinity/",
					},
				},
				"SQRT1_2": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-sqrt1-2/",
					},
				},
				"SQRT2": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-sqrt2/",
					},
				},
				"TAU": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/math-constants-limits/math-tau/",
					},
				},
			},
		},
		"now": &Object{
			Items: map[string]*Object{
				"sec": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/date-and-time/now-sec/",
					},
				},
			},
			Value: &Accessor{
				Get:       types.TimeType,
				Set:       types.NeverType,
				Unset:     false,
				Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
				Reference: "https://developer.fastly.com/reference/vcl/variables/date-and-time/now/",
			},
		},
		"obj": &Object{
			Items: map[string]*Object{
				"age": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | DELIVER | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-age/",
					},
				},
				"cacheable": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-cacheable/",
					},
				},
				"entered": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | DELIVER | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-entered/",
					},
				},
				"grace": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    HIT | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-grace/",
					},
				},
				"hits": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-hits/",
					},
				},
				"http": {
					Items: map[string]*Object{
						"%any%": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     true,
								Scopes:    HIT | ERROR,
								Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-http/",
							},
						},
					},
				},
				"is_pci": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | DELIVER | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-is-pci/",
					},
				},
				"lastuse": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | DELIVER | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-lastuse/",
					},
				},
				"proto": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-proto/",
					},
				},
				"response": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    HIT | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-response/",
					},
				},
				"stale_if_error": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-stale-if-error/",
					},
				},
				"stale_while_revalidate": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    HIT | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-stale-while-revalidate/",
					},
				},
				"status": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    HIT | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-status/",
					},
				},
				"ttl": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    HIT | ERROR | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/obj-ttl/",
					},
				},
			},
		},
		"quic": &Object{
			Items: map[string]*Object{
				"cc": {
					Items: map[string]*Object{
						"cwnd": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-cc-cwnd/",
							},
						},
						"ssthresh": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-cc-ssthresh/",
							},
						},
					},
				},
				"num_bytes": {
					Items: map[string]*Object{
						"received": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-bytes-received/",
							},
						},
						"sent": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-bytes-sent/",
							},
						},
					},
				},
				"num_packets": {
					Items: map[string]*Object{
						"ack_received": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-packets-ack-received/",
							},
						},
						"decryption_failed": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-packets-decryption-failed/",
							},
						},
						"late_acked": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-packets-late-acked/",
							},
						},
						"lost": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-packets-lost/",
							},
						},
						"received": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-packets-received/",
							},
						},
						"sent": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-num-packets-sent/",
							},
						},
					},
				},
				"rtt": {
					Items: map[string]*Object{
						"latest": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-rtt-latest/",
							},
						},
						"minimum": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-rtt-minimum/",
							},
						},
						"smoothed": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-rtt-smoothed/",
							},
						},
						"variance": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/quic-rtt-variance/",
							},
						},
					},
				},
			},
		},
		"ratecounter": &Object{
			Items: map[string]*Object{
				"%any%": {
					Items: map[string]*Object{
						"bucket": {
							Items: map[string]*Object{
								"10s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.IntegerType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-bucket-10s/",
									},
								},
								"20s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.IntegerType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-bucket-20s/",
									},
								},
								"30s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.IntegerType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-bucket-30s/",
									},
								},
								"40s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.IntegerType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-bucket-40s/",
									},
								},
								"50s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.IntegerType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-bucket-50s/",
									},
								},
								"60s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.IntegerType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-bucket-60s/",
									},
								},
							},
						},
						"rate": {
							Items: map[string]*Object{
								"10s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.FloatType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-rate-10s/",
									},
								},
								"1s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.FloatType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-rate-1s/",
									},
								},
								"60s": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.FloatType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/rate-limiting/ratecounter-rate-60s/",
									},
								},
							},
						},
					},
				},
			},
		},
		"req": &Object{
			Items: map[string]*Object{
				"backend": {
					Items: map[string]*Object{
						"healthy": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/req-backend-healthy/",
							},
						},
						"ip": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IPType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-backend-ip/",
							},
						},
						"is_cluster": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    DELIVER,
								Reference: "https://www.integralist.co.uk/posts/fastly-varnish/",
							},
						},
						"is_origin": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    PASS | MISS | FETCH,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/req-backend-is-origin/",
							},
						},
						"is_shield": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/req-backend-is-shield/",
							},
						},
						"name": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-backend-name/",
							},
						},
						"port": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-backend-port/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.ReqBackendType,
						Set:       types.ReqBackendType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/backend-connection/req-backend/",
					},
				},
				"body": {
					Items: map[string]*Object{
						"base64": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-body-base64/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-body/",
					},
				},
				"body_bytes_read": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-body-bytes-read/",
					},
				},
				"bytes_read": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-bytes-read/",
					},
				},
				"customer_id": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-customer-id/",
					},
				},
				"digest": {
					Items: map[string]*Object{
						"ratio": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.FloatType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/req-digest-ratio/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/req-digest/",
					},
				},
				"enable_range_on_pass": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-enable-range-on-pass/",
					},
				},
				"enable_segmented_caching": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-enable-segmented-caching/",
					},
				},
				"esi": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV | FETCH | ERROR | DELIVER,
						Reference: "https://developer.fastly.com/reference/vcl/variables/esi/req-esi/",
					},
				},
				"esi_level": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | DELIVER,
						Reference: "https://developer.fastly.com/reference/vcl/variables/esi/req-esi-level/",
					},
				},
				"grace": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/req-grace/",
					},
				},
				"hash": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    HASH | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/req-hash/",
					},
				},
				"hash_always_miss": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-hash-always-miss/",
					},
				},
				"hash_ignore_busy": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-hash-ignore-busy/",
					},
				},
				"header_bytes_read": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-header-bytes-read/",
					},
				},
				"http": {
					Items: map[string]*Object{
						"%any%": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     true,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-http/",
							},
						},
					},
				},
				"is_background_fetch": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-is-background-fetch/",
					},
				},
				"is_clustering": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/req-is-clustering/",
					},
				},
				"is_esi_subreq": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/esi/req-is-esi-subreq/",
					},
				},
				"is_ipv6": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/req-is-ipv6/",
					},
				},
				"is_purge": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-is-purge/",
					},
				},
				"is_ssl": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/req-is-ssl/",
					},
				},
				"max_stale_if_error": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/req-max-stale-if-error/",
					},
				},
				"max_stale_while_revalidate": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.RTimeType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/req-max-stale-while-revalidate/",
					},
				},
				"method": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-method/",
					},
				},
				"postbody": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-postbody/",
					},
				},
				"proto": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-proto/",
					},
				},
				"protocol": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/req-protocol/",
					},
				},
				"request": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-request/",
					},
				},
				"restarts": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/req-restarts/",
					},
				},
				"service_id": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-service-id/",
					},
				},
				"topurl": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/esi/req-topurl/",
					},
				},
				"url": {
					Items: map[string]*Object{
						"basename": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-url-basename/",
							},
						},
						"dirname": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-url-dirname/",
							},
						},
						"ext": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-url-ext/",
							},
						},
						"path": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-url-path/",
							},
						},
						"qs": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-url-qs/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-url/",
					},
				},
				"vcl": {
					Items: map[string]*Object{
						"generation": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-vcl-generation/",
							},
						},
						"md5": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-vcl-md5/",
							},
						},
						"version": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-vcl-version/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/req-vcl/",
					},
				},
				"xid": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/req-xid/",
					},
				},
			},
		},
		"resp": &Object{
			Items: map[string]*Object{
				"body_bytes_written": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-body-bytes-written/",
					},
				},
				"bytes_written": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-bytes-written/",
					},
				},
				"completed": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-completed/",
					},
				},
				"header_bytes_written": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-header-bytes-written/",
					},
				},
				"http": {
					Items: map[string]*Object{
						"%any%": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.StringType,
								Unset:     true,
								Scopes:    DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-http/",
							},
						},
					},
				},
				"is_locally_generated": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-is-locally-generated/",
					},
				},
				"proto": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-proto/",
					},
				},
				"response": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-response/",
					},
				},
				"stale": {
					Items: map[string]*Object{
						"is_error": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.BoolType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/resp-stale-is-error/",
							},
						},
						"is_revalidating": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.BoolType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/resp-stale-is-revalidating/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/resp-stale/",
					},
				},
				"status": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/resp-status/",
					},
				},
			},
		},
		"segmented_caching": &Object{
			Items: map[string]*Object{
				"autopurged": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-autopurged/",
					},
				},
				"block_number": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-block-number/",
					},
				},
				"block_size": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    RECV | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-block-size/",
					},
				},
				"cancelled": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-cancelled/",
					},
				},
				"client_req": {
					Items: map[string]*Object{
						"is_open_ended": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-client-req-is-open-ended/",
							},
						},
						"is_range": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.BoolType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-client-req-is-range/",
							},
						},
						"range_high": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-client-req-range-high/",
							},
						},
						"range_low": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-client-req-range-low/",
							},
						},
					},
				},
				"completed": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-completed/",
					},
				},
				"error": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-error/",
					},
				},
				"failed": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-failed/",
					},
				},
				"is_inner_req": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-is-inner-req/",
					},
				},
				"is_outer_req": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-is-outer-req/",
					},
				},
				"obj": {
					Items: map[string]*Object{
						"complete_length": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-obj-complete-length/",
							},
						},
					},
				},
				"rounded_req": {
					Items: map[string]*Object{
						"range_high": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-rounded-req-range-high/",
							},
						},
						"range_low": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-rounded-req-range-low/",
							},
						},
					},
				},
				"total_blocks": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/segmented-caching/segmented-caching-total-blocks/",
					},
				},
			},
		},
		"server": &Object{
			Items: map[string]*Object{
				"billing_region": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-billing-region/",
					},
				},
				"datacenter": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-datacenter/",
					},
				},
				"hostname": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-hostname/",
					},
				},
				"identity": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-identity/",
					},
				},
				"ip": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IPType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-ip/",
					},
				},
				"pop": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-pop/",
					},
				},
				"port": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-port/",
					},
				},
				"region": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/server/server-region/",
					},
				},
			},
		},
		"stale": &Object{
			Items: map[string]*Object{
				"exists": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/cache-object/stale-exists/",
					},
				},
			},
		},
		"time": &Object{
			Items: map[string]*Object{
				"elapsed": {
					Items: map[string]*Object{
						"msec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-elapsed-msec/",
							},
						},
						"msec_frac": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-elapsed-msec-frac/",
							},
						},
						"sec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-elapsed-sec/",
							},
						},
						"usec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-elapsed-usec/",
							},
						},
						"usec_frac": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-elapsed-usec-frac/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-elapsed/",
					},
				},
				"end": {
					Items: map[string]*Object{
						"msec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-end-msec/",
							},
						},
						"msec_frac": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-end-msec-frac/",
							},
						},
						"sec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-end-sec/",
							},
						},
						"usec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-end-usec/",
							},
						},
						"usec_frac": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-end-usec-frac/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.TimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-end/",
					},
				},
				"start": {
					Items: map[string]*Object{
						"msec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-start-msec/",
							},
						},
						"msec_frac": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-start-msec-frac/",
							},
						},
						"sec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-start-sec/",
							},
						},
						"usec": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-start-usec/",
							},
						},
						"usec_frac": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-start-usec-frac/",
							},
						},
					},
					Value: &Accessor{
						Get:       types.TimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-request/time-start/",
					},
				},
				"to_first_byte": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.RTimeType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-response/time-to-first-byte/",
					},
				},
			},
		},
		"tls": &Object{
			Items: map[string]*Object{
				"client": {
					Items: map[string]*Object{
						"certificate": {
							Items: map[string]*Object{
								"dn": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-dn/",
									},
								},
								"is_cert_bad": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-cert-bad/",
									},
								},
								"is_cert_expired": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-cert-expired/",
									},
								},
								"is_cert_missing": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-cert-missing/",
									},
								},
								"is_cert_revoked": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-cert-revoked/",
									},
								},
								"is_cert_unknown": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-cert-unknown/",
									},
								},
								"is_unknown_ca": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-unknown-ca/",
									},
								},
								"is_verified": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.BoolType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-is-verified/",
									},
								},
								"issuer_dn": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-issuer-dn/",
									},
								},
								"not_after": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.TimeType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-not-after/",
									},
								},
								"not_before": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.TimeType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-not-before/",
									},
								},
								"raw_certificate_b64": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-raw-certificate-b64/",
									},
								},
								"serial_number": {
									Items: map[string]*Object{},
									Value: &Accessor{
										Get:       types.StringType,
										Set:       types.NeverType,
										Unset:     false,
										Scopes:    RECV | HASH | DELIVER | LOG,
										Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-certificate-serial-number/",
									},
								},
							},
						},
						"cipher": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-cipher/",
							},
						},
						"ciphers_list": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-ciphers-list/",
							},
						},
						"ciphers_list_sha": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-ciphers-list-sha/",
							},
						},
						"ciphers_list_txt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-ciphers-list-txt/",
							},
						},
						"ciphers_sha": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-ciphers-sha/",
							},
						},
						"handshake_sent_bytes": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-handshake-sent-bytes/",
							},
						},
						"iana_chosen_cipher_id": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.IntegerType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-iana-chosen-cipher-id/",
							},
						},
						"ja3_md5": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-ja3-md5/",
							},
						},
						"ja4": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/documentation/reference/vcl/variables/client-connection/tls-client-ja4/",
							},
						},
						"protocol": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-protocol/",
							},
						},
						"servername": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-servername/",
							},
						},
						"tlsexts_list": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-tlsexts-list/",
							},
						},
						"tlsexts_list_sha": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-tlsexts-list-sha/",
							},
						},
						"tlsexts_list_txt": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-tlsexts-list-txt/",
							},
						},
						"tlsexts_sha": {
							Items: map[string]*Object{},
							Value: &Accessor{
								Get:       types.StringType,
								Set:       types.NeverType,
								Unset:     false,
								Scopes:    RECV | HASH | DELIVER | LOG,
								Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/tls-client-tlsexts-sha/",
							},
						},
					},
				},
			},
		},
		"transport": &Object{
			Items: map[string]*Object{
				"bw_estimate": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/transport-bw-estimate/",
					},
				},
				"type": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/client-connection/transport-type/",
					},
				},
			},
		},
		"waf": &Object{
			Items: map[string]*Object{
				"anomaly_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-anomaly-score/",
					},
				},
				"blocked": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-blocked/",
					},
				},
				"counter": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-counter/",
					},
				},
				"executed": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-executed/",
					},
				},
				"failures": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-failures/",
					},
				},
				"http_violation_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-http-violation-score/",
					},
				},
				"inbound_anomaly_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-inbound-anomaly-score/",
					},
				},
				"lfi_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-lfi-score/",
					},
				},
				"logdata": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-logdata/",
					},
				},
				"logged": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-logged/",
					},
				},
				"message": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.StringType,
						Set:       types.StringType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-message/",
					},
				},
				"passed": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.BoolType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG | ERROR,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-passed/",
					},
				},
				"php_injection_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-php-injection-score/",
					},
				},
				"rce_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-rce-score/",
					},
				},
				"rfi_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-rfi-score/",
					},
				},
				"rule_id": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-rule-id/",
					},
				},
				"session_fixation_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-session-fixation-score/",
					},
				},
				"severity": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-severity/",
					},
				},
				"sql_injection_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.FloatType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-sql-injection-score/",
					},
				},
				"xss_score": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.IntegerType,
						Unset:     false,
						Scopes:    PASS | MISS | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/waf/waf-xss-score/",
					},
				},
			},
		},
		"workspace": &Object{
			Items: map[string]*Object{
				"bytes_free": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/workspace-bytes-free/",
					},
				},
				"bytes_total": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.IntegerType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/workspace-bytes-total/",
					},
				},
				"overflowed": {
					Items: map[string]*Object{},
					Value: &Accessor{
						Get:       types.BoolType,
						Set:       types.NeverType,
						Unset:     false,
						Scopes:    RECV | HASH | HIT | MISS | PASS | FETCH | ERROR | DELIVER | LOG,
						Reference: "https://developer.fastly.com/reference/vcl/variables/miscellaneous/workspace-overflowed/",
					},
				},
			},
		},
	}

}

func newRegexMatchedValues() map[string]int {
	return map[string]int{
		"re.group.0":  0,
		"re.group.1":  0,
		"re.group.2":  0,
		"re.group.3":  0,
		"re.group.4":  0,
		"re.group.5":  0,
		"re.group.6":  0,
		"re.group.7":  0,
		"re.group.8":  0,
		"re.group.9":  0,
		"re.group.10": 0,
	}
}
